# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node

name: yourFeedsBE CI
# Controls when the workflow will run
on:
  push:
    branches: [ staging, master ]
    paths-ignore:
      - '**.md'
  pull_request:
    types: [opened, reopened]
    branches: [ staging, master ]
    paths-ignore:
      - '**.md'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  lint:
    name: DevSkim
    runs-on: ubuntu-20.04
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run DevSkim scanner
        uses: microsoft/DevSkim-Action@v1

      - name: Upload DevSkim scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: devskim-results.sarif

  analyze:
    needs: lint
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  # Run tests
  test:
    needs: [lint, analyze]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # Runs a set of commands using the runners shell
      # Prevent npm from executing arbitrary scripts
      - run: npm config set ignore-scripts true
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test --passWithNoTests

  # Run build Staging
  build-staging:
    needs: [lint, analyze, test]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # Runs a set of commands using the runners shell
      # Prevent npm from executing arbitrary scripts
      - run: npm config set ignore-scripts true
      - run: npm ci
      - run: npm run build --if-present
    if: github.ref_name == 'staging' || github.ref == 'refs/heads/staging'

  # Run build Production
  build-production:
    needs: [ lint, analyze, test ]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 18.x ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # Runs a set of commands using the runners shell
      # Prevent npm from executing arbitrary scripts
      - run: npm config set ignore-scripts true
      - run: npm ci
      - run: npm run build --if-present
    if: github.ref_name == 'master' || github.ref == 'refs/heads/master'
